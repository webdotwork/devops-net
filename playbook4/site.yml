---
  - name: Install vector
    hosts: vector
    roles: 
      - vector

  - name: Install clickhouse
    hosts: clickhouse
    roles: 
      - clickhouse

  - name: Install nginx
    hosts: lighthouse
    roles:
        - nginx-role

  - name: Install lighthouse
    hosts: lighthouse
    roles:
        - lighthouse

  

# - name: Install Clickhouse
#   hosts: clickhouse
#   handlers:
#     - name: Start clickhouse service
#       become: true
#       ansible.builtin.service:
#         name: clickhouse-server
#         state: restarted
#         enabled: true
#   tasks:
#     - name: Get clickhouse distrib block with rescue
#       block:
#         - name: Get clickhouse distrib
#           ansible.builtin.get_url:
#             url: "https://packages.clickhouse.com/rpm/stable/{{ item }}-{{ clickhouse_version }}.noarch.rpm"
#             dest: "./{{ item }}-{{ clickhouse_version }}.rpm"
#             mode: '0666'
#           with_items: "{{ clickhouse_packages }}"
#       rescue:
#         - name: Get clickhouse distrib
#           ansible.builtin.get_url:
#             url: "https://packages.clickhouse.com/rpm/stable/clickhouse-common-static-{{ clickhouse_version }}.x86_64.rpm"
#             dest: "./clickhouse-common-static-{{ clickhouse_version }}.rpm"
#             mode: '0666'
#     - name: Install clickhouse packages
#       become: true
#       ansible.builtin.yum:
#         name:
#           - clickhouse-common-static-{{ clickhouse_version }}.rpm
#           - clickhouse-client-{{ clickhouse_version }}.rpm
#           - clickhouse-server-{{ clickhouse_version }}.rpm
#       notify: Start clickhouse service
#   post_tasks:
#     - name: Database startup pause
#       ansible.builtin.pause:
#         seconds: 20
#     - name: Create database
#       ansible.builtin.command: "clickhouse-client -q 'create database logs;'"
#       register: create_db
#       failed_when: create_db.rc != 0 and create_db.rc !=82
#       changed_when: create_db.rc == 0

# - name: Install Vector
#   hosts: vector
#   tasks:
#     - name: Get Vector setup script
#       ansible.builtin.get_url:
#         url: "https://repositories.timber.io/public/vector/cfg/setup/bash.rpm.sh"
#         dest: "/tmp/bash.rpm.sh"
#         mode: '0777'
#     - name: Run Vector setup script
#       become: true
#       ansible.builtin.command:
#         cmd: "/tmp/bash.rpm.sh"
#       changed_when: true
#     - name: Yum install Vector
#       become: true
#       ansible.builtin.yum:
#         name: vector-0.22.3
#         #{{ vector_version }}
#         state: installed
#     - name: Start Vector
#       become: true
#       ansible.builtin.service:
#         name: vector
#         state: started
#         enabled: true


# - name: Install NGINX
#   hosts: lighthouse
#   handlers:
#     - name: start-nginx
#       become: true
#       command: nginx
#     - name: reload-nginx
#       become: true
#       command: nginx -s reload
#   tasks:
#     - name: Install epel-release
#       become: true
#       ansible.builtin.yum:
#         name: epel-release.noarch
#         state: latest
#     - name: Install NGINX
#       become: true
#       ansible.builtin.yum:
#         name: nginx
#         state: present
#       notify: start-nginx
#     - name: Create general config NGINX
#       become: true
#       template:
#         src: "template/nging.conf.j2"
#         dest: "/etc/nginx/nginx.conf"
#         mode: 0755
#       notify: reload-nginx
#       tags: install nginx

# - name: Install lighthouse
#   handlers:
#   - name: start-nginx
#     become: true
#     command: nginx
#   - name: reload-nginx
#     become: true
#     command: nginx -s reload
#   hosts: lighthouse
#   pre_tasks:
#     - name: Install dependencies lighthouse
#       ansible.builtin.yum:
#         name: git
#         state: present
#   tasks:
#     - name: Copy from git lighthouse
#       become: true
#       git:
#         repo: "{{ lighthouse_vcs }}"
#         version: master
#         dest: "{{ lighthouse_location_dir }}"
#     - name: Create lighthouse config
#       become: true
#       template:
#         src: "template/lighthouse.conf.j2"
#         dest: "/etc/nginx/conf.d/default.conf"
#         mode: 0644
#       notify: reload-nginx